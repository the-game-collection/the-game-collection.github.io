var db = {}, platform = '', tab = '', _user, _mm, server = window.location.href

$(document).ready(async() => {
  db = await $.getJSON('db.json');
  
  $('.parallax').parallax();
  $('.collapsible').collapsible();
  
  Object.keys(db.plat_list).forEach(plat => {
    $('#'+plat).html(`<p class="center"><img class="responsive-img" src="img/${plat}.png"><br>${db.plat_list[plat].name}</p>`);
    $('#'+plat).click(() => { if(plat != platform) load(plat) });
    $('#'+plat).hover(() => { if(plat != platform) $('#'+plat).addClass('purple lighten-3') });
	  $('#'+plat).mouseleave(() => { if(plat != platform) $('#'+plat).removeClass('purple lighten-3') });
  });
  
  $('.worker').hover(() => _user.worker.stop());
  $('.worker').mouseleave(() => _user.worker.start());
  
  $('a').click(function(e) {
    if(e.target.id == 'person') {
      if($('#user').is(':visible')) $('#user').hide()
      else $('#user').show();
      return
    }
    
    if($(e.target).attr('href') == '#!') return load(0,$(e.target).html());
    
    if($(e.target).hasClass('head-link')) {
      e.preventDefault();
      var goto = $(this).attr('href');
      $('html, body').animate({ scrollTop: $(goto).offset().top }, 800);
      return
    }

    if($(e.target).hasClass('support')) {
      navigator.clipboard.writeText($('input[type=text][id='+this.id+']').val());
    }
  });
  
  _user = new user(server);
  _mm = new mm('0x75576e2510B45dd99117446d297Cee580Ba83092');

  for (const [c, n] of Object.entries(_mm.coins)) {
    var coin = c.split('_')[0];
    var rem = c == 'ETH_t' ? '[1]' : c == 'XEENUS_t' ? '[2]' : c == 'BNB_t' ? '[3]' :  '';
    $('#metamask').append(`<tr>
    <td><img src="img/${coin}.png" width="32" height="32"></td>
    <td>${n.name} (${coin}) ${rem}</td><td id="o_${c}">0</td><td id="f_${c}">0</td>
    <td><a id="d_${c}" class="disabled btn" onclick="deposit('${c}')"><i class="material-icons left">file_download</i>Deposit</a></td>
    <td><a id="w_${c}" class="disabled btn" onclick="withdraw('${c}')"><i class="material-icons left">file_upload</i>Withdraw</a></td>
    </tr>`);
    if(_mm.metamask) {
      $(`#d_${c}`).removeClass("disabled").addClass('waves-effect waves-light');
      $(`#w_${c}`).removeClass("disabled").addClass('waves-effect waves-light');
    }
  }

  if(_mm.metamask) {
    $('#xeenus').removeClass("disabled").addClass('waves-effect waves-light');
    $('#xeenus').click( async() => {
      await _mm.switch('XEENUS_t');
      _mm.deposit('ETH_t',0,_mm.coins.XEENUS_t.contract)
    });
    
    $('#deposit_v').change(e => deposit(e));
    $('#deposit_s').click(function() { _mm.deposit($(this).attr('coin'),1*$(`#deposit_v`).val()+1*$(`#deposit_f`).html()) });

    $('#withdraw_v').change(e => withdraw(e));
    $('#withdraw_s').click(async function() { _mm.withdraw($(this).attr('coin'), 1*$(`#withdraw_v`).val(),1*$(`#withdraw_f`).html()) });
  }

  load('nes','A');
})


// xeenus

function deposit(e) {
  if(typeof e == 'object') {
    var x = $(e.target).val();
    if(isNaN(x) || x == 0) {
      $(`#deposit_s`).removeClass("waves-effect waves-light submit").addClass('disabled');
      $(`#deposit_f`).html('0.0001');
    }
    else {
      $(`#deposit_s`).removeClass("disabled").addClass('waves-effect waves-light submit');
      var fee = 1*(x/100).toFixed(4); if(fee == 0) fee = 0.0001;
      $(`#deposit_f`).html(fee)
    }
    return
  }

  if(_mm.coins[e]) {
    var n = _mm.coins[e], coin = e.split('_')[0];
    $('#deposit_s').attr('coin',e);
    $('#deposit_h').html(`Deposit ${coin} from ${n.name}`);
    $('#deposit_c').html(coin);
    $('#deposit_v').val(0); $(`#deposit_s`).removeClass("waves-effect waves-light submit").addClass('disabled');
    $('#card').hide(); $('#deposit').show(); $('#deposit_hist').show();

    $('#deposit_tdody').html(''); $('#deposit_coin').html(coin);
    _user.metamask.forEach(x => {
      if(x.coin == e) {
        if(x.qty >= 0) {
          $('#deposit_tdody').append(`<tr>
            <td>${new Date(x.date).toLocaleString()}</td>
            <td><a href="${n.explorer+'/tx/'+x.hash}" target="_blank">${x.hash}</a></td>
            <td>${1*x.qty}</td>
            <td>${x.status == 'pending' ? `<a style="cursor: pointer" onclick="_user.to_server({ cmd: 'deposit', coin: '${e}', hash: '${x.hash}', date: ${x.date} })">pending</a>` : x.status}</td>
          </tr>`)
        }
      }
    })
    return
  }
}

function withdraw(e) {
  if(typeof e == 'object') {
    var x = $(e.target).val(), coin = $('#withdraw_s').attr('coin')
    if(isNaN(x) || x == 0) {
      $(`#withdraw_s`).removeClass("waves-effect waves-light submit").addClass('disabled');
      $(`withdraw_f`).html('0.0001');
    }
    else {
      var fee = 1*(x/100).toFixed(4); if(fee == 0) fee = 0.0001;
      $(`#withdraw_f`).html(fee);

      var c = _user.card();
      var t1 = c.USDT.o + c.USDT.f >= 30 || _mm.coins[coin].name.indexOf('Testnet') > 0;
      var t2 = 1*c[coin].f > 1*x+fee;

      if(t1 && t2) $(`#withdraw_s`).removeClass("disabled").addClass('waves-effect waves-light submit');
      else $(`#withdraw_s`).removeClass("waves-effect waves-light submit").addClass('disabled');
    }
    return
  }
  if(_mm.coins[e]) {
    var n = _mm.coins[e], coin = e.split('_')[0];
    $('#withdraw_s').attr('coin',e)
    $('#withdraw_h').html(`Withdrawal ${coin} to ${n.name}`);
    $('#withdraw_c').html(coin);
    $('#withdraw_v').val(0); $(`#withdraw_s`).removeClass("waves-effect waves-light submit").addClass('disabled');
    $('#card').hide(); $('#withdraw').show(); $('#withdraw_hist').show();

    $('#withdraw_tdody').html(''); $('#withdraw_coin').html(coin);
    _user.metamask.forEach(x => {
      if(x.coin == e) {
        if(x.qty < 0) {
          $('#withdraw_tdody').append(`<tr>
            <td>${new Date(x.date).toLocaleString()}</td>
            <td>${x.hash.indexOf('_') > -1 ? 'Approval required, please wait' : '<a href="'+n.explorer+'/tx/'+x.hash+'" target="_blank">'+x.hash+'</a>'}</td>
            <td>${-1*x.qty}</td>
            <td>${x.status}</td>
          </tr>`)
        }
      }
    })

    if(n.name.indexOf('Testnet') > 0) $('#vip30').hide()
    else $('#vip30').show()
    $('#withdraw_a').html((1*_user.card()[e].f).toFixed(4));
    return
  }
}

async function load(P,T) {
  if(P) platform = P; if(T) tab = T;

  var list = await $.getJSON(`${platform}/${tab == '#' ? '0' : tab}.json`);
  $('#list').html('');
  list.forEach(g => {
    var x = !g.url ? '' : `<a class="waves-effect waves-light btn" href="${myurl(g.url)}"><i class="material-icons left">file_download</i>Download</a>`;
    var str = `<tr><td>${g.name}</td><td>${g.year}</td><td>${g.developer}<td>${x}</td></tr>`;
    $('#list').append(str)
  });
  if($('body').css('opacity') == 0) $('body').css({ opacity: 1, transition: 'all 2s ease' });

  $('#plat').html(db.plat_list[platform].name);
    
  var e = db.plat_list[platform].emu;
  $('#emu').html(`<a href="${db.emu[e].web}" target="_blank">${e}</a>`);
  $('#exe').html(db.emu[e].exe);
  
  Object.keys(db.plat_list).forEach(x => {
    if(platform == x) {
      $('#'+x).addClass('purple');
      $('#'+x).removeClass('lighten-3');
      $('#'+x).children('p').eq(0).css('color','white');
    }
    else {
      $('#'+x).removeClass('purple');
      $('#'+x).children('p').eq(0).css('color','black')
    }
  });

  $('a').each(function() {
	  if($(this).attr('href') == '#!') {
	    if($(this).html() == tab) $(this).parent().addClass('active').removeClass('waves-effect')
	    else $(this).parent().removeClass('active').addClass('waves-effect')
	  }
  });
}

function myurl(x) {
  for (const [key, value] of Object.entries(db.prefixes)) {
    if(x.startsWith(key+'#')) { x = value+x.slice(key.length+1); break }
  }

  if(x.startsWith('http')) return x
  return 'https://archive.org/download/'+x
}

class user {
  usdt = 0
  metamask = []
  market = []
  a = []
  n = [0,'looks_one','looks_two','looks_3','looks_4','looks_5','looks_6']
  constructor (server) {
    this.server = server;

    this.worker = new worker()
    this.worker.connect(db.server[Number(server.startsWith('https:'))], data => {

      if(data.login === true) {
        $('.login').hide(); $("div[id='card']").show();
        $('.c_user').html($('#username').val());
        if(data.demo) $('.c_user:first').append(' (demo)')
      }
      
      if(data.login === false) this.captcha('Password is wrong');
      
      var f = false;
      if(data.usdt != undefined) { this.usdt = data.usdt; f = true }
      if(data.metamask) {
        data.metamask.forEach(e => {
          var ff = this.metamask.some((x,i) => {
            if(e.date == x.date) { this.metamask[i] = e; return true }
          })
          if(!ff) this.metamask.push(e)
        });
        f = true
      }
      if(data.market) {
        data.market.forEach(e => {
          var ff = this.market.some((x,i) => {
            if(e.date == x.date) { this.market[i] = e; return true }
          })
          if(!ff) this.market.push(e)
        });
        f = true
      }
      
      if(f) this.card()
    });

    if(!this.getCookie('master')) {
      this.master = server.split('id=')[1];
      if(this.master) this.setCookie('master', this.master);
    }
    this.captcha('');
    $('#login').click(() => {
      if(this.a[0]*10+this.a[1]+this.a[2]*10+this.a[3] != $("#captcha").val()) return this.captcha('Captcha is wrong');
      if($('#password').val().length < 6) return this.captcha('Password length must be at least 6 characters');
      if($('#username').val() == '') return this.captcha('Username can not be empty');
      if(!$('#username').val().match("^[A-Za-z0-9]+$")) return this.captcha('Username must contain only letters or digits');
      this.captcha('');
      this.to_server({ cmd: 'login', val: this.master ? this.master : '#' })
    });
    $('.back').click(() => this.back());
  }

  card() {
    var res = { USDT: { o: 0, f: this.usdt } };
    this.market.forEach(e => {
      if(e.side == 'buy') { res.USDT.o += e.price*(e.qty - e.exec); res.USDT.f -= e.price*e.qty }
      if(e.side == 'sell') res.USDT.f += e.price*e.exec;
    });

    Object.keys(_mm.coins).forEach(c => {
      if(!res[c]) res[c] = { o: 0, f: 0 }
      this.metamask.forEach(e => { if(e.coin == c) res[c].f += 1*e.qty });
      this.market.forEach(e => { if(e.coin == c) {
        if(e.side == 'buy') res[c].f += 1*e.exec
        if(e.side == 'sell') { res[c].o += e.qty - e.exec; res[c].f -= e.qty }
      }});
      $('#o_'+c).html(1*res[c].o.toFixed(4)); $('#f_'+c).html(1*res[c].f.toFixed(4));
    })

    return res
  }

  captcha(msg) {
    this.a = []
    while(this.a.length < 4 ) this.a.push(this.random(1,6));
    var str = '';
    this.a.forEach((v,i) => {
      str += `<i class="material-icons small">${this.n[v]}</i>`;
      if(i == 1) str += `<i class="material-icons small">add</i>`;
    });
    $("#_captcha").html(str);
    if(msg == '') {
      $("div[id='login_error']").hide();
      return true
    }
    $("span[id='login_error']").html(msg);
    $("div[id='login_error']").show();
    return false
  }
  back() {
    $('#deposit').hide(); $('#deposit_hist').hide(); $('#withdraw').hide();$('#withdraw_hist').hide(); $('#card').show()
  }
  to_server(obj) {
    obj.user = $('#username').val();
    obj.md5 = MD5($('#password').val());
    this.worker.ws_send(obj);
    if(obj.cmd == 'deposit' || obj.cmd == 'withdraw') this.back()
  }
  random(min, max) { 
    return Math.floor(Math.random() * (max - min + 1) + min)
  }
  setCookie(cname, cvalue) {
    const d = new Date();
    d.setTime(d.getTime() + (365 * 24 * 60 * 60 * 1000));
    let expires = "expires="+d.toUTCString();
    document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
  }
  getCookie(cname) {
    let name = cname + "=";
    let ca = document.cookie.split(';');
    for(let i = 0; i < ca.length; i++) {
      let c = ca[i];
      while (c.charAt(0) == ' ') c = c.substring(1);
      if (c.indexOf(name) == 0) return c.substring(name.length, c.length);
    }
    return "";
  }
}

class mm {
  metamask = false
  constructor(shop_address) {
    this.shop_address = shop_address;
    this.metamask = typeof window.ethereum !== 'undefined' && ethereum.isMetaMask;
    if(this.metamask) ethereum.on('chainChanged', async id => {
      console.log('new chainId: '+ await this.chainId(parseInt(id,16)));
    });
  }
  async abi(c) {
    if(typeof c.abi == 'object') return c.abi;
    var pp = typeof c.abi == 'string' ? c.abi : 'api.'+c.explorer.split('/')[2];
    var x = await $.getJSON(`https://${pp}/api?module=contract&action=getabi&address=${c.contract}`);
    return JSON.parse(x.result);
  }
  async chainId(){
    if(!this.metamask) return 0;
    return parseInt(await ethereum.request({ method: 'eth_chainId' }),16);
  }
  async address() {
    if(!this.metamask) return 0;
    return (await ethereum.request({method: 'eth_requestAccounts'}))[0];
  }
  async balance() {
    if(!this.metamask) return 0;
    var x = await ethereum.request({method: 'eth_getBalance', params: [await this.address(),'latest']});
    return parseInt(x,16)/(10**18);
  }
  async deposit(coin,qty,addr) {
    try {
      if(!this.metamask) throw new Error('Metamask not found');
      var c = this.coins[coin], amount = '0x'+Math.trunc(qty*(10**c.decimal)).toString(16), from = await this.address();
      var web3 = new Web3(Web3.givenProvider);
      if (c.id != await this.chainId()) await this.switch(coin);
      if(c.contract) {
        c.abi = await this.abi(c);
        var inst = new web3.eth.Contract(c.abi, c.contract);
        inst.methods
          .transfer(addr ? addr : this.shop_address, amount)
          .send({ from: from })
          .on("transactionHash", hash => _user.to_server({ cmd: 'deposit', coin: coin, hash: hash }))
          .on("error", err => alert('Deposit error: '+err.message))
      }
      else {
        var tx = await web3.eth.sendTransaction({
          from: from,
          to: addr ? addr : this.shop_address,
          value: amount,
        });
        _user.to_server({ cmd: 'deposit', coin: coin, hash: tx.transactionHash });
      }
    }
    catch(err) {
      alert('Deposit error: '+err.message)
    }
  }
  async withdraw(coin,qty,fee) {
    _user.to_server({ cmd: 'withdraw', coin: coin, qty: qty, fee: fee, to: await this.address()})
  }
  async switch(coin) {
    var c = this.coins[coin], id = '0x'+(c.id).toString(16), s = coin.split('_')[0];

    if(c.id != 1 && c.id != 5) {
      var nc =  { name: s, symbol: s, decimals: c.decimal }
      if(c.contract) for (const [key, v] of Object.entries(_mm.coins)) if(v.id == c.id) {
        var cc_s = key.split('_')[0];
        nc =  { name: cc_s, symbol: cc_s, decimals: v.decimal };
        break
      }
      await ethereum.request({
        method: 'wallet_addEthereumChain',
        params: [{ chainId: id, chainName: c.name, rpcUrls: [c.url], nativeCurrency: nc, blockExplorerUrls: [c.explorer] }],
      });
    }

    await ethereum.request({
      method: "wallet_switchEthereumChain",
      params: [{ chainId: id }]
    });

    if(c.contract && !c.listed) c.listed = await ethereum.request({
      method: 'wallet_watchAsset',
      params: { type: 'ERC20', options: { address: c.contract, symbol: s, decimals: c.decimal } },
    });
  }
  coins = {
    'USDT': {
      id: 1,
      name: 'Ethereum Mainnet',
      url:  'https://mainnet.infura.io/v3',
      explorer: 'https://etherscan.io',
      contract: '0xdAC17F958D2ee523a2206206994597C13D831ec7',
      abi: [{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_upgradedAddress","type":"address"}],"name":"deprecate","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"deprecated","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_evilUser","type":"address"}],"name":"addBlackList","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"upgradedAddress","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"balances","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"maximumFee","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"_totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"unpause","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_maker","type":"address"}],"name":"getBlackListStatus","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"},{"name":"","type":"address"}],"name":"allowed","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"paused","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"who","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"pause","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"newBasisPoints","type":"uint256"},{"name":"newMaxFee","type":"uint256"}],"name":"setParams","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"amount","type":"uint256"}],"name":"issue","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"amount","type":"uint256"}],"name":"redeem","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"}],"name":"allowance","outputs":[{"name":"remaining","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"basisPointsRate","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"isBlackListed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_clearedUser","type":"address"}],"name":"removeBlackList","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"MAX_UINT","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_blackListedUser","type":"address"}],"name":"destroyBlackFunds","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"_initialSupply","type":"uint256"},{"name":"_name","type":"string"},{"name":"_symbol","type":"string"},{"name":"_decimals","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"amount","type":"uint256"}],"name":"Issue","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"amount","type":"uint256"}],"name":"Redeem","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"newAddress","type":"address"}],"name":"Deprecate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"feeBasisPoints","type":"uint256"},{"indexed":false,"name":"maxFee","type":"uint256"}],"name":"Params","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_blackListedUser","type":"address"},{"indexed":false,"name":"_balance","type":"uint256"}],"name":"DestroyedBlackFunds","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_user","type":"address"}],"name":"AddedBlackList","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_user","type":"address"}],"name":"RemovedBlackList","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[],"name":"Pause","type":"event"},{"anonymous":false,"inputs":[],"name":"Unpause","type":"event"}],
      decimal: 6
    },
    'ETH': {
      id: 1,
      name: 'Ethereum Mainnet',
      url:  'https://mainnet.infura.io/v3',
      explorer: 'https://etherscan.io',
      decimal: 18
    },
    'BNB': {
      id: 56,
      name: 'BNB Smart Chain',
      url:  'https://bsc-dataseed.binance.org',
      explorer: 'https://bscscan.com',
      decimal: 18
    },
    'AVAX': {
      id: 43114,
      name: 'Avalanche Network C-Chain',
      url:   'https://avalanche-mainnet.infura.io',
      explorer: 'https://snowtrace.io',
      decimal: 18
    },
    'FTM': {
      id: 250,
      name: 'Fantom Opera',
      url:  'https://rpc.ftm.tools',
      explorer: 'https://ftmscan.com',
      decimal: 18
    },
    'MATIC': {
      id: 137,
      name: 'Polygon Mainnet',
      url:  'https://polygon-mainnet.infura.io',
      explorer: 'https://polygonscan.com',
      decimal: 18
    },
    'DAI': {
      id: 1,
      name: 'Ethereum Mainnet',
      url:  'https://mainnet.infura.io/v3',
      explorer: 'https://etherscan.io',
      contract: '0x6B175474E89094C44Da98b954EedeAC495271d0F',
      abi: [{"inputs":[{"internalType":"uint256","name":"chainId_","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"guy","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":true,"inputs":[{"indexed":true,"internalType":"bytes4","name":"sig","type":"bytes4"},{"indexed":true,"internalType":"address","name":"usr","type":"address"},{"indexed":true,"internalType":"bytes32","name":"arg1","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"arg2","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"LogNote","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":true,"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"PERMIT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"burn","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"guy","type":"address"}],"name":"deny","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"mint","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"move","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"bool","name":"allowed","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"pull","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"push","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"guy","type":"address"}],"name":"rely","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"wards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],
      decimal: 18
    },
    'BUSD': {
      id: 56,
      name: 'BNB Smart Chain',
      url:  'https://bsc-dataseed.binance.org',
      explorer: 'https://bscscan.com',
      contract: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',
      abi: [{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":true,"inputs":[],"name":"_decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"_name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"_symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"renounceOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}],
      decimal: 18
    },
    'ETH_t': {
      id: 5,
      name: 'Ethereum Goerli Testnet',
      url:   'https://goerli.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161',
      explorer: 'https://goerli.etherscan.io',
      faucet: 'https://goerlifaucet.com',
      decimal: 18
    },
    'XEENUS_t': {
      id: 5,
      name: 'Ethereum Goerli Testnet',
      url:   'https://goerli.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161',
      explorer: 'https://goerli.etherscan.io',
      contract: '0x022E292b44B5a146F2e8ee36Ff44D3dd863C915c',
      abi: [{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"tokens","type":"uint256"}],"name":"approve","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"from","type":"address"},{"name":"to","type":"address"},{"name":"tokens","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"tokenOwner","type":"address"}],"name":"balanceOf","outputs":[{"name":"balance","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"acceptOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"drip","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"to","type":"address"},{"name":"tokens","type":"uint256"}],"name":"transfer","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"tokens","type":"uint256"},{"name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"newOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"tokenAddress","type":"address"},{"name":"tokens","type":"uint256"}],"name":"transferAnyERC20Token","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"tokenOwner","type":"address"},{"name":"spender","type":"address"}],"name":"allowance","outputs":[{"name":"remaining","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"payable":true,"stateMutability":"payable","type":"fallback"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"},{"indexed":true,"name":"_to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"tokens","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"tokenOwner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"tokens","type":"uint256"}],"name":"Approval","type":"event"}],
      decimal: 18
    },
    'BNB_t': {
      id: 97,
      name: 'Binance Smart Chain Testnet',
      url:   'https://data-seed-prebsc-1-s1.binance.org:8545',
      explorer: 'https://testnet.bscscan.com',
      faucet: 'https://testnet.bnbchain.org/faucet-smart',
      decimal: 18
    }
  }
}

function MD5(d){function M(d){for(var _,m="0123456789ABCDEF",f="",r=0;r<d.length;r++)_=d.charCodeAt(r),f+=m.charAt(_>>>4&15)+m.charAt(15&_);return f}function X(d){for(var _=Array(d.length>>2),m=0;m<_.length;m++)_[m]=0;for(m=0;m<8*d.length;m+=8)_[m>>5]|=(255&d.charCodeAt(m/8))<<m%32;return _}function V(d){for(var _="",m=0;m<32*d.length;m+=8)_+=String.fromCharCode(d[m>>5]>>>m%32&255);return _}function Y(d,_){d[_>>5]|=128<<_%32,d[14+(_+64>>>9<<4)]=_;for(var m=1732584193,f=-271733879,r=-1732584194,i=271733878,n=0;n<d.length;n+=16){var h=m,t=f,g=r,e=i;f=md5_ii(f=md5_ii(f=md5_ii(f=md5_ii(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_hh(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_gg(f=md5_ff(f=md5_ff(f=md5_ff(f=md5_ff(f,r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+0],7,-680876936),f,r,d[n+1],12,-389564586),m,f,d[n+2],17,606105819),i,m,d[n+3],22,-1044525330),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+4],7,-176418897),f,r,d[n+5],12,1200080426),m,f,d[n+6],17,-1473231341),i,m,d[n+7],22,-45705983),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+8],7,1770035416),f,r,d[n+9],12,-1958414417),m,f,d[n+10],17,-42063),i,m,d[n+11],22,-1990404162),r=md5_ff(r,i=md5_ff(i,m=md5_ff(m,f,r,i,d[n+12],7,1804603682),f,r,d[n+13],12,-40341101),m,f,d[n+14],17,-1502002290),i,m,d[n+15],22,1236535329),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+1],5,-165796510),f,r,d[n+6],9,-1069501632),m,f,d[n+11],14,643717713),i,m,d[n+0],20,-373897302),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+5],5,-701558691),f,r,d[n+10],9,38016083),m,f,d[n+15],14,-660478335),i,m,d[n+4],20,-405537848),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+9],5,568446438),f,r,d[n+14],9,-1019803690),m,f,d[n+3],14,-187363961),i,m,d[n+8],20,1163531501),r=md5_gg(r,i=md5_gg(i,m=md5_gg(m,f,r,i,d[n+13],5,-1444681467),f,r,d[n+2],9,-51403784),m,f,d[n+7],14,1735328473),i,m,d[n+12],20,-1926607734),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+5],4,-378558),f,r,d[n+8],11,-2022574463),m,f,d[n+11],16,1839030562),i,m,d[n+14],23,-35309556),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+1],4,-1530992060),f,r,d[n+4],11,1272893353),m,f,d[n+7],16,-155497632),i,m,d[n+10],23,-1094730640),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+13],4,681279174),f,r,d[n+0],11,-358537222),m,f,d[n+3],16,-722521979),i,m,d[n+6],23,76029189),r=md5_hh(r,i=md5_hh(i,m=md5_hh(m,f,r,i,d[n+9],4,-640364487),f,r,d[n+12],11,-421815835),m,f,d[n+15],16,530742520),i,m,d[n+2],23,-995338651),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+0],6,-198630844),f,r,d[n+7],10,1126891415),m,f,d[n+14],15,-1416354905),i,m,d[n+5],21,-57434055),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+12],6,1700485571),f,r,d[n+3],10,-1894986606),m,f,d[n+10],15,-1051523),i,m,d[n+1],21,-2054922799),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+8],6,1873313359),f,r,d[n+15],10,-30611744),m,f,d[n+6],15,-1560198380),i,m,d[n+13],21,1309151649),r=md5_ii(r,i=md5_ii(i,m=md5_ii(m,f,r,i,d[n+4],6,-145523070),f,r,d[n+11],10,-1120210379),m,f,d[n+2],15,718787259),i,m,d[n+9],21,-343485551),m=safe_add(m,h),f=safe_add(f,t),r=safe_add(r,g),i=safe_add(i,e)}return Array(m,f,r,i)}function md5_cmn(d,_,m,f,r,i){return safe_add(bit_rol(safe_add(safe_add(_,d),safe_add(f,i)),r),m)}function md5_ff(d,_,m,f,r,i,n){return md5_cmn(_&m|~_&f,d,_,r,i,n)}function md5_gg(d,_,m,f,r,i,n){return md5_cmn(_&f|m&~f,d,_,r,i,n)}function md5_hh(d,_,m,f,r,i,n){return md5_cmn(_^m^f,d,_,r,i,n)}function md5_ii(d,_,m,f,r,i,n){return md5_cmn(m^(_|~f),d,_,r,i,n)}function safe_add(d,_){var m=(65535&d)+(65535&_);return(d>>16)+(_>>16)+(m>>16)<<16|65535&m}function bit_rol(d,_){return d<<_|d>>>32-_};var r = M(V(Y(X(d),8*d.length)));return r.toLowerCase()}
